/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './app/routes/__root'
import { Route as LoginRouteImport } from './app/routes/login'
import { Route as AuthenticatedRouteRouteImport } from './app/routes/_authenticated/route'
import { Route as IndexRouteImport } from './app/routes/index'
import { Route as AuthenticatedDashboardRouteImport } from './app/routes/_authenticated/dashboard'
import { Route as AuthenticatedProjectsCreateRouteImport } from './app/routes/_authenticated/projects.create'
import { Route as AuthenticatedProjectsProjectIdIndexRouteImport } from './app/routes/_authenticated/projects.$projectId.index'
import { Route as AuthenticatedProjectsProjectIdBranchBranchIdConfigEditRouteImport } from './app/routes/_authenticated/projects.$projectId.branch.$branchId.config.edit'
import { ServerRoute as ApiAuthCallbackMicrosoftEntraIdIndexServerRouteImport } from './app/routes/api/auth/callback/microsoft-entra-id/index'

const rootServerRouteImport = createServerRootRoute()

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedDashboardRoute = AuthenticatedDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedProjectsCreateRoute =
  AuthenticatedProjectsCreateRouteImport.update({
    id: '/projects/create',
    path: '/projects/create',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedProjectsProjectIdIndexRoute =
  AuthenticatedProjectsProjectIdIndexRouteImport.update({
    id: '/projects/$projectId/',
    path: '/projects/$projectId/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedProjectsProjectIdBranchBranchIdConfigEditRoute =
  AuthenticatedProjectsProjectIdBranchBranchIdConfigEditRouteImport.update({
    id: '/projects/$projectId/branch/$branchId/config/edit',
    path: '/projects/$projectId/branch/$branchId/config/edit',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const ApiAuthCallbackMicrosoftEntraIdIndexServerRoute =
  ApiAuthCallbackMicrosoftEntraIdIndexServerRouteImport.update({
    id: '/api/auth/callback/microsoft-entra-id/',
    path: '/api/auth/callback/microsoft-entra-id/',
    getParentRoute: () => rootServerRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/projects/create': typeof AuthenticatedProjectsCreateRoute
  '/projects/$projectId': typeof AuthenticatedProjectsProjectIdIndexRoute
  '/projects/$projectId/branch/$branchId/config/edit': typeof AuthenticatedProjectsProjectIdBranchBranchIdConfigEditRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/projects/create': typeof AuthenticatedProjectsCreateRoute
  '/projects/$projectId': typeof AuthenticatedProjectsProjectIdIndexRoute
  '/projects/$projectId/branch/$branchId/config/edit': typeof AuthenticatedProjectsProjectIdBranchBranchIdConfigEditRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/_authenticated/dashboard': typeof AuthenticatedDashboardRoute
  '/_authenticated/projects/create': typeof AuthenticatedProjectsCreateRoute
  '/_authenticated/projects/$projectId/': typeof AuthenticatedProjectsProjectIdIndexRoute
  '/_authenticated/projects/$projectId/branch/$branchId/config/edit': typeof AuthenticatedProjectsProjectIdBranchBranchIdConfigEditRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/dashboard'
    | '/projects/create'
    | '/projects/$projectId'
    | '/projects/$projectId/branch/$branchId/config/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/dashboard'
    | '/projects/create'
    | '/projects/$projectId'
    | '/projects/$projectId/branch/$branchId/config/edit'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/login'
    | '/_authenticated/dashboard'
    | '/_authenticated/projects/create'
    | '/_authenticated/projects/$projectId/'
    | '/_authenticated/projects/$projectId/branch/$branchId/config/edit'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  LoginRoute: typeof LoginRoute
}
export interface FileServerRoutesByFullPath {
  '/api/auth/callback/microsoft-entra-id': typeof ApiAuthCallbackMicrosoftEntraIdIndexServerRoute
}
export interface FileServerRoutesByTo {
  '/api/auth/callback/microsoft-entra-id': typeof ApiAuthCallbackMicrosoftEntraIdIndexServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/auth/callback/microsoft-entra-id/': typeof ApiAuthCallbackMicrosoftEntraIdIndexServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/auth/callback/microsoft-entra-id'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/auth/callback/microsoft-entra-id'
  id: '__root__' | '/api/auth/callback/microsoft-entra-id/'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiAuthCallbackMicrosoftEntraIdIndexServerRoute: typeof ApiAuthCallbackMicrosoftEntraIdIndexServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/dashboard': {
      id: '/_authenticated/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/projects/create': {
      id: '/_authenticated/projects/create'
      path: '/projects/create'
      fullPath: '/projects/create'
      preLoaderRoute: typeof AuthenticatedProjectsCreateRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/projects/$projectId/': {
      id: '/_authenticated/projects/$projectId/'
      path: '/projects/$projectId'
      fullPath: '/projects/$projectId'
      preLoaderRoute: typeof AuthenticatedProjectsProjectIdIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/projects/$projectId/branch/$branchId/config/edit': {
      id: '/_authenticated/projects/$projectId/branch/$branchId/config/edit'
      path: '/projects/$projectId/branch/$branchId/config/edit'
      fullPath: '/projects/$projectId/branch/$branchId/config/edit'
      preLoaderRoute: typeof AuthenticatedProjectsProjectIdBranchBranchIdConfigEditRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/auth/callback/microsoft-entra-id/': {
      id: '/api/auth/callback/microsoft-entra-id/'
      path: '/api/auth/callback/microsoft-entra-id'
      fullPath: '/api/auth/callback/microsoft-entra-id'
      preLoaderRoute: typeof ApiAuthCallbackMicrosoftEntraIdIndexServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface AuthenticatedRouteRouteChildren {
  AuthenticatedDashboardRoute: typeof AuthenticatedDashboardRoute
  AuthenticatedProjectsCreateRoute: typeof AuthenticatedProjectsCreateRoute
  AuthenticatedProjectsProjectIdIndexRoute: typeof AuthenticatedProjectsProjectIdIndexRoute
  AuthenticatedProjectsProjectIdBranchBranchIdConfigEditRoute: typeof AuthenticatedProjectsProjectIdBranchBranchIdConfigEditRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedDashboardRoute: AuthenticatedDashboardRoute,
  AuthenticatedProjectsCreateRoute: AuthenticatedProjectsCreateRoute,
  AuthenticatedProjectsProjectIdIndexRoute:
    AuthenticatedProjectsProjectIdIndexRoute,
  AuthenticatedProjectsProjectIdBranchBranchIdConfigEditRoute:
    AuthenticatedProjectsProjectIdBranchBranchIdConfigEditRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  LoginRoute: LoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiAuthCallbackMicrosoftEntraIdIndexServerRoute:
    ApiAuthCallbackMicrosoftEntraIdIndexServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
